# Generated by Django 4.2.4 on 2023-10-29 15:09

from django.db import migrations


def set_price(apps, schema_editor):
    MULTIPLY_PRICE = 120


    smartphone_model = apps.get_model('main_app', 'Smartphone')

    all_smartphones = smartphone_model.objects.all()

    for smartphone in all_smartphones:
        smartphone.price = len(smartphone.brand) * MULTIPLY_PRICE

    smartphone_model.objects.bulk_update(all_smartphones, ['price'])

def set_category(apps, schema_editor):
    smartphone_model = apps.get_model('main_app', 'Smartphone')

    all_smartphones = smartphone_model.objects.all()

    for smartphone in all_smartphones:
        if smartphone.price >= 750:
            smartphone.category = 'Expensive'
        else:
            smartphone.category = 'Cheap'

    smartphone_model.objects.bulk_update(all_smartphones, ['category'])

def set_category_and_price(apps, schema_editor):

    set_price(apps, schema_editor)

    set_category(apps, schema_editor)

def reverse_code(apps, schema_editor):
    smartphone_model = apps.get_model('main_app', 'Smartphone')

    all_smartphones = smartphone_model.objects.all()

    price_default = smartphone_model._meta.get_field('price').default
    category_default = smartphone_model._meta.get_field('category').default

    for smartphone in all_smartphones:
        smartphone.price = price_default
        smartphone.category = category_default

    smartphone_model.objects.bulk_update(all_smartphones, ['price'])
    smartphone_model.objects.bulk_update(all_smartphones, ['category'])


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0014_smartphone'),
    ]

    operations = [
        migrations.RunPython(set_category_and_price, reverse_code=reverse_code),
    ]
